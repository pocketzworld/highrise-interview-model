// automatically generated by the FlatBuffers compiler, do not modify

package rs.high.life.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class VWChatEvent extends Table {
  public static VWChatEvent getRootAsVWChatEvent(ByteBuffer _bb) { return getRootAsVWChatEvent(_bb, new VWChatEvent()); }
  public static VWChatEvent getRootAsVWChatEvent(ByteBuffer _bb, VWChatEvent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public VWChatEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String senderId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer senderIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public String sendername() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sendernameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public String message() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer messageAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }

  public static int createVWChatEvent(FlatBufferBuilder builder,
      int senderIdOffset,
      int sendernameOffset,
      int messageOffset) {
    builder.startObject(3);
    VWChatEvent.addMessage(builder, messageOffset);
    VWChatEvent.addSendername(builder, sendernameOffset);
    VWChatEvent.addSenderId(builder, senderIdOffset);
    return VWChatEvent.endVWChatEvent(builder);
  }

  public static void startVWChatEvent(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addSenderId(FlatBufferBuilder builder, int senderIdOffset) { builder.addOffset(0, senderIdOffset, 0); }
  public static void addSendername(FlatBufferBuilder builder, int sendernameOffset) { builder.addOffset(1, sendernameOffset, 0); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(2, messageOffset, 0); }
  public static int endVWChatEvent(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // senderId
    builder.required(o, 6);  // sendername
    builder.required(o, 8);  // message
    return o;
  }
  public static void finishVWChatEventBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
}

