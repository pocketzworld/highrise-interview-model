# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers

class Avatar(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsAvatar(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Avatar()
        x.Init(buf, n + offset)
        return x

    # Avatar
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Avatar
    def UserId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

    # Avatar
    def Username(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

def AvatarStart(builder): builder.StartObject(2)
def AvatarAddUserId(builder, userId): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(userId), 0)
def AvatarAddUsername(builder, username): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(username), 0)
def AvatarEnd(builder): return builder.EndObject()
